{"ast":null,"code":"import _slicedToArray from \"/home/unix/Downloads/react-hooks-blog-fullstack-master/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/unix/Downloads/react-hooks-blog-fullstack-master/Client/src/context_state_config.js\";\nimport React, { useReducer } from 'react';\nimport Context from './utils/context';\nimport * as ACTIONS from './store/actions/actions';\nimport * as Reducer1 from './store/reducers/plain_reducer';\nimport * as AuthReducer from './store/reducers/auth_reducer';\nimport * as FormReducer from './store/reducers/form_reducer';\nimport * as PostsReducer from './store/reducers/posts_reducer';\nimport Routes from './routes';\nimport Auth from './utils/auth';\nconst auth = new Auth();\n\nconst ContextState = props => {\n  /*\r\n      Plain Reducer\r\n  */\n  const _useReducer = useReducer(Reducer1.Reducer1, Reducer1.initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        stateReducer1 = _useReducer2[0],\n        dispatchReducer1 = _useReducer2[1];\n\n  const handleDispatchTrue = () => {\n    //    dispatchReducer1(type: \"SUCCESS\")\n    //    dispatchReducer1(ACTIONS.SUCCESS)\n    dispatchReducer1(ACTIONS.success());\n  };\n\n  const handleDispatchFalse = () => {\n    //     dispatchReducer1(type: \"FAILURE\")\n    //    dispatchReducer1(ACTIONS.FAILURE)\n    dispatchReducer1(ACTIONS.failure());\n  };\n  /*\r\n    Auth Reducer\r\n  */\n\n\n  const _useReducer3 = useReducer(AuthReducer.AuthReducer, AuthReducer.initialState),\n        _useReducer4 = _slicedToArray(_useReducer3, 2),\n        stateAuthReducer = _useReducer4[0],\n        dispatchAuthReducer = _useReducer4[1];\n\n  const handleLogin = () => {\n    dispatchAuthReducer(ACTIONS.login_success());\n  };\n\n  const handleLogout = () => {\n    dispatchAuthReducer(ACTIONS.login_failure());\n  };\n\n  const handleDBProfile = profile => {\n    dispatchAuthReducer(ACTIONS.set_db_profile(profile));\n  };\n\n  const handleRemoveDBProfile = () => {\n    dispatchAuthReducer(ACTIONS.remove_db_profile());\n  };\n\n  const handleAddProfile = profile => {\n    dispatchAuthReducer(ACTIONS.add_profile(profile));\n  };\n\n  const handleRemoveProfile = () => {\n    dispatchAuthReducer(ACTIONS.remove_profile());\n  };\n  /*\r\n    Form Reducer\r\n  */\n\n\n  const _useReducer5 = useReducer(FormReducer.FormReducer, FormReducer.initialState),\n        _useReducer6 = _slicedToArray(_useReducer5, 2),\n        stateFormReducer = _useReducer6[0],\n        dispatchFormReducer = _useReducer6[1];\n\n  const handleFormChange = event => {\n    dispatchFormReducer(ACTIONS.user_input_change(event.target.value));\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    event.persist();\n    dispatchFormReducer(ACTIONS.user_input_submit(event.target.useContext.value));\n  };\n  /*\r\n    Posts Reducer\r\n  */\n\n\n  const _useReducer7 = useReducer(PostsReducer.PostsReducer, PostsReducer.initialState),\n        _useReducer8 = _slicedToArray(_useReducer7, 2),\n        statePostsReducer = _useReducer8[0],\n        dispatchPostsReducer = _useReducer8[1];\n\n  const handleSetPosts = posts => {\n    dispatchPostsReducer(ACTIONS.set_db_posts(posts));\n  };\n\n  const handleRemovePosts = () => {\n    dispatchPostsReducer(ACTIONS.remove_db_posts());\n  }; //Handle authentication from callback\n\n\n  const handleAuthentication = props => {\n    if (props.location.hash) {\n      auth.handleAuth();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      stateProp1: stateReducer1.stateprop1,\n      dispatchContextTrue: () => handleDispatchTrue(),\n      dispatchContextFalse: () => handleDispatchFalse(),\n      //Auth Reducer\n      //keep for global state\n      authState: stateAuthReducer.is_authenticated,\n      dbProfileState: stateAuthReducer.db_profile,\n      profileState: stateAuthReducer.profile,\n      handleAddDBProfile: profile => handleDBProfile(profile),\n      handleRemoveDBProfile: () => handleRemoveDBProfile(),\n      handleUserAddProfile: profile => handleAddProfile(profile),\n      handleUserRemoveProfile: () => handleRemoveProfile(),\n      handleUserLogin: () => handleLogin(),\n      handleUserLogout: () => handleLogout(),\n      //Form Reducer\n      useContextChangeState: stateFormReducer.user_textChange,\n      useContextSubmitState: stateFormReducer.user_textSubmit,\n      useContextSubmit: event => handleFormSubmit(event),\n      useContextChange: event => handleFormChange(event),\n      //Posts State\n      postsState: statePostsReducer.posts,\n      handleAddPosts: posts => handleSetPosts(posts),\n      handleRemovePosts: () => handleRemovePosts(),\n      //Handle auth\n      //keep for global state\n      handleAuth: props => handleAuthentication(props),\n      authObj: auth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default ContextState;","map":{"version":3,"sources":["/home/unix/Downloads/react-hooks-blog-fullstack-master/Client/src/context_state_config.js"],"names":["React","useReducer","Context","ACTIONS","Reducer1","AuthReducer","FormReducer","PostsReducer","Routes","Auth","auth","ContextState","props","initialState","stateReducer1","dispatchReducer1","handleDispatchTrue","success","handleDispatchFalse","failure","stateAuthReducer","dispatchAuthReducer","handleLogin","login_success","handleLogout","login_failure","handleDBProfile","profile","set_db_profile","handleRemoveDBProfile","remove_db_profile","handleAddProfile","add_profile","handleRemoveProfile","remove_profile","stateFormReducer","dispatchFormReducer","handleFormChange","event","user_input_change","target","value","handleFormSubmit","preventDefault","persist","user_input_submit","useContext","statePostsReducer","dispatchPostsReducer","handleSetPosts","posts","set_db_posts","handleRemovePosts","remove_db_posts","handleAuthentication","location","hash","handleAuth","stateProp1","stateprop1","dispatchContextTrue","dispatchContextFalse","authState","is_authenticated","dbProfileState","db_profile","profileState","handleAddDBProfile","handleUserAddProfile","handleUserRemoveProfile","handleUserLogin","handleUserLogout","useContextChangeState","user_textChange","useContextSubmitState","user_textSubmit","useContextSubmit","useContextChange","postsState","handleAddPosts","authObj"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport Context from './utils/context';\r\nimport * as ACTIONS from './store/actions/actions';\r\n\r\nimport * as Reducer1 from './store/reducers/plain_reducer';\r\nimport * as AuthReducer from './store/reducers/auth_reducer';\r\nimport * as FormReducer from './store/reducers/form_reducer';\r\nimport * as PostsReducer from './store/reducers/posts_reducer';\r\n\r\n\r\nimport Routes from './routes';\r\n\r\nimport Auth from './utils/auth';\r\n\r\nconst auth = new Auth()\r\n\r\n\r\nconst ContextState = (props) => {\r\n    /*\r\n        Plain Reducer\r\n    */\r\n    const [stateReducer1, dispatchReducer1] = useReducer(Reducer1.Reducer1,\r\n                                                         Reducer1.initialState)\r\n\r\n\r\n    const handleDispatchTrue = () => {\r\n      //    dispatchReducer1(type: \"SUCCESS\")\r\n      //    dispatchReducer1(ACTIONS.SUCCESS)\r\n      dispatchReducer1(ACTIONS.success())\r\n    }\r\n\r\n    const handleDispatchFalse = () => {\r\n      //     dispatchReducer1(type: \"FAILURE\")\r\n      //    dispatchReducer1(ACTIONS.FAILURE)\r\n      dispatchReducer1(ACTIONS.failure())\r\n     }\r\n\r\n    /*\r\n      Auth Reducer\r\n    */\r\n    const [stateAuthReducer, dispatchAuthReducer] = useReducer(AuthReducer.AuthReducer,\r\n                                                               AuthReducer.initialState)\r\n\r\n\r\n    const handleLogin = () => {\r\n      dispatchAuthReducer(ACTIONS.login_success())\r\n    }\r\n\r\n    const handleLogout = () => {\r\n      dispatchAuthReducer(ACTIONS.login_failure())\r\n    }\r\n\r\n\r\n    const handleDBProfile = (profile) => {\r\n      dispatchAuthReducer(ACTIONS.set_db_profile(profile))\r\n    }\r\n\r\n    const handleRemoveDBProfile = () => {\r\n      dispatchAuthReducer(ACTIONS.remove_db_profile())\r\n    }\r\n\r\n    const handleAddProfile = (profile) => {\r\n      dispatchAuthReducer(ACTIONS.add_profile(profile))\r\n    }\r\n\r\n    const handleRemoveProfile = () => {\r\n      dispatchAuthReducer(ACTIONS.remove_profile())\r\n    }\r\n\r\n\r\n\r\n    /*\r\n      Form Reducer\r\n    */\r\n\r\n    const [stateFormReducer, dispatchFormReducer] = useReducer(FormReducer.FormReducer,\r\n                                                               FormReducer.initialState)\r\n\r\n    const handleFormChange = (event) => {\r\n      dispatchFormReducer(ACTIONS.user_input_change(event.target.value))\r\n    };\r\n\r\n    const handleFormSubmit = (event) => {\r\n      event.preventDefault();\r\n      event.persist();\r\n      dispatchFormReducer(ACTIONS.user_input_submit(event.target.useContext.value))\r\n    };\r\n\r\n\r\n    /*\r\n      Posts Reducer\r\n    */\r\n\r\n    const [statePostsReducer, dispatchPostsReducer] = useReducer(PostsReducer.PostsReducer,\r\n                                                         PostsReducer.initialState)\r\n\r\n\r\n    const handleSetPosts = (posts) => {\r\n      dispatchPostsReducer(ACTIONS.set_db_posts(posts) )\r\n    }\r\n\r\n    const handleRemovePosts = () => {\r\n      dispatchPostsReducer(ACTIONS.remove_db_posts() )\r\n    }\r\n\r\n\r\n    //Handle authentication from callback\r\n    const handleAuthentication = (props) => {\r\n      if(props.location.hash) {\r\n        auth.handleAuth()\r\n      }\r\n    }\r\n\r\n\r\n    return(\r\n      <div>\r\n      <Context.Provider\r\n          value={{\r\n            stateProp1: stateReducer1.stateprop1,\r\n            dispatchContextTrue: () => handleDispatchTrue(),\r\n            dispatchContextFalse: () => handleDispatchFalse(),\r\n\r\n            //Auth Reducer\r\n            //keep for global state\r\n            authState: stateAuthReducer.is_authenticated,\r\n            dbProfileState: stateAuthReducer.db_profile,\r\n            profileState:  stateAuthReducer.profile,\r\n\r\n            handleAddDBProfile: (profile) => handleDBProfile(profile),\r\n            handleRemoveDBProfile: () => handleRemoveDBProfile(),\r\n            handleUserAddProfile: (profile) => handleAddProfile(profile),\r\n            handleUserRemoveProfile: () => handleRemoveProfile(),\r\n            handleUserLogin: () => handleLogin(),\r\n            handleUserLogout: () => handleLogout(),\r\n\r\n            //Form Reducer\r\n            useContextChangeState: stateFormReducer.user_textChange,\r\n            useContextSubmitState: stateFormReducer.user_textSubmit,\r\n            useContextSubmit: (event) => handleFormSubmit(event),\r\n            useContextChange: (event) => handleFormChange(event),\r\n\r\n            //Posts State\r\n            postsState: statePostsReducer.posts,\r\n            handleAddPosts: (posts) => handleSetPosts(posts),\r\n            handleRemovePosts: () => handleRemovePosts(),\r\n\r\n            //Handle auth\r\n            //keep for global state\r\n            handleAuth: (props) => handleAuthentication(props),\r\n            authObj: auth\r\n          }}>\r\n          <Routes />\r\n      </Context.Provider>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ContextState;\r\n"]},"metadata":{},"sourceType":"module"}
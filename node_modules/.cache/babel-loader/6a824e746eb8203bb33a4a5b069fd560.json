{"ast":null,"code":"import auth0 from 'auth0-js';\nimport history from './history';\nexport default class Auth {\n  constructor() {\n    this.auth0 = new auth0.WebAuth({\n      domain: 'webapp1.auth0.com',\n      clientID: 'uZxUdMAsiDWeu3OrNpoi4JwJscdF5nAx',\n      redirectUri: 'http://localhost:3000/callback',\n      responseType: 'token id_token',\n      scope: 'openid profile email'\n    });\n    this.userProfile = {};\n\n    this.login = () => {\n      this.auth0.authorize();\n    };\n\n    this.handleAuth = () => {\n      this.auth0.parseHash((err, authResult) => {\n        if (authResult) {\n          localStorage.setItem('access_token', authResult.accessToken);\n          localStorage.setItem('id_token', authResult.idToken);\n          let expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n          localStorage.setItem('expiresAt', expiresAt);\n          this.getProfile();\n          setTimeout(() => {\n            history.replace('/authcheck');\n          }, 600);\n        } else {\n          console.log(err);\n        }\n      });\n    };\n\n    this.getAccessToken = () => {\n      if (localStorage.getItem('access_token')) {\n        const accessToken = localStorage.getItem('access_token');\n        return accessToken;\n      } else {\n        return null;\n      }\n    };\n\n    this.getProfile = () => {\n      let accessToken = this.getAccessToken();\n\n      if (accessToken) {\n        this.auth0.client.userInfo(accessToken, (err, profile) => {\n          if (profile) {\n            this.userProfile = {\n              profile\n            };\n          }\n        });\n      }\n    };\n\n    this.logout = () => {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('id_token');\n      localStorage.removeItem('expiresAt');\n      setTimeout(() => {\n        history.replace('/authcheck');\n      }, 200);\n    };\n\n    this.isAuthenticated = () => {\n      let expiresAt = JSON.parse(localStorage.getItem('expiresAt'));\n      return new Date().getTime() < expiresAt;\n    };\n  }\n\n}","map":{"version":3,"sources":["/home/unix/Downloads/react-hooks-blog-fullstack-master/Client/src/utils/auth.js"],"names":["auth0","history","Auth","WebAuth","domain","clientID","redirectUri","responseType","scope","userProfile","login","authorize","handleAuth","parseHash","err","authResult","localStorage","setItem","accessToken","idToken","expiresAt","JSON","stringify","expiresIn","Date","getTime","getProfile","setTimeout","replace","console","log","getAccessToken","getItem","client","userInfo","profile","logout","removeItem","isAuthenticated","parse"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,MAAMC,IAAN,CAAW;AAAA;AAAA,SACxBF,KADwB,GAChB,IAAIA,KAAK,CAACG,OAAV,CAAkB;AACxBC,MAAAA,MAAM,EAAE,mBADgB;AAExBC,MAAAA,QAAQ,EAAE,kCAFc;AAGxBC,MAAAA,WAAW,EAAE,gCAHW;AAIxBC,MAAAA,YAAY,EAAE,gBAJU;AAKxBC,MAAAA,KAAK,EAAE;AALiB,KAAlB,CADgB;AAAA,SASxBC,WATwB,GASV,EATU;;AAAA,SAWxBC,KAXwB,GAWhB,MAAM;AACV,WAAKV,KAAL,CAAWW,SAAX;AACH,KAbuB;;AAAA,SAexBC,UAfwB,GAeX,MAAM;AACjB,WAAKZ,KAAL,CAAWa,SAAX,CAAqB,CAACC,GAAD,EAAMC,UAAN,KAAqB;AACxC,YAAGA,UAAH,EAAe;AACbC,UAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,UAAU,CAACG,WAAhD;AACAF,UAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,UAAU,CAACI,OAA5C;AAEA,cAAIC,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAgBP,UAAU,CAACQ,SAAX,GAAuB,IAAvB,GAA8B,IAAIC,IAAJ,GAAWC,OAAX,EAA9C,CAAhB;AACAT,UAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCG,SAAlC;AAEA,eAAKM,UAAL;AACAC,UAAAA,UAAU,CAAC,MAAM;AAAE1B,YAAAA,OAAO,CAAC2B,OAAR,CAAgB,YAAhB;AAA+B,WAAxC,EAA0C,GAA1C,CAAV;AACD,SATD,MASO;AACLC,UAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAZ;AACD;AACF,OAbD;AAcD,KA9BuB;;AAAA,SAgCxBiB,cAhCwB,GAgCP,MAAM;AACrB,UAAGf,YAAY,CAACgB,OAAb,CAAqB,cAArB,CAAH,EAAyC;AACvC,cAAMd,WAAW,GAAGF,YAAY,CAACgB,OAAb,CAAqB,cAArB,CAApB;AACA,eAAOd,WAAP;AACD,OAHD,MAGO;AACL,eAAO,IAAP;AACD;AACF,KAvCuB;;AAAA,SA0CxBQ,UA1CwB,GA0CX,MAAM;AACjB,UAAIR,WAAW,GAAG,KAAKa,cAAL,EAAlB;;AACA,UAAGb,WAAH,EAAgB;AACd,aAAKlB,KAAL,CAAWiC,MAAX,CAAkBC,QAAlB,CAA2BhB,WAA3B,EAAwC,CAACJ,GAAD,EAAMqB,OAAN,KAAkB;AACtD,cAAGA,OAAH,EAAY;AACV,iBAAK1B,WAAL,GAAmB;AAAE0B,cAAAA;AAAF,aAAnB;AACD;AACJ,SAJD;AAKD;AACF,KAnDuB;;AAAA,SAsDxBC,MAtDwB,GAsDf,MAAM;AACbpB,MAAAA,YAAY,CAACqB,UAAb,CAAwB,cAAxB;AACArB,MAAAA,YAAY,CAACqB,UAAb,CAAwB,UAAxB;AACArB,MAAAA,YAAY,CAACqB,UAAb,CAAwB,WAAxB;AACAV,MAAAA,UAAU,CAAC,MAAM;AAAE1B,QAAAA,OAAO,CAAC2B,OAAR,CAAgB,YAAhB;AAA+B,OAAxC,EAA0C,GAA1C,CAAV;AACD,KA3DuB;;AAAA,SA6DxBU,eA7DwB,GA6DN,MAAM;AACtB,UAAIlB,SAAS,GAAGC,IAAI,CAACkB,KAAL,CAAWvB,YAAY,CAACgB,OAAb,CAAqB,WAArB,CAAX,CAAhB;AACA,aAAO,IAAIR,IAAJ,GAAWC,OAAX,KAAuBL,SAA9B;AACD,KAhEuB;AAAA;;AAAA","sourcesContent":["import auth0 from 'auth0-js'\r\nimport history from './history';\r\n\r\nexport default class Auth {\r\n  auth0 = new auth0.WebAuth({\r\n    domain: 'webapp1.auth0.com',\r\n    clientID: 'uZxUdMAsiDWeu3OrNpoi4JwJscdF5nAx',\r\n    redirectUri: 'http://localhost:3000/callback',\r\n    responseType: 'token id_token',\r\n    scope: 'openid profile email'\r\n  })\r\n\r\n  userProfile = {}\r\n\r\n  login = () => {\r\n      this.auth0.authorize()\r\n  }\r\n\r\n  handleAuth = () => {\r\n    this.auth0.parseHash((err, authResult) => {\r\n      if(authResult) {\r\n        localStorage.setItem('access_token', authResult.accessToken)\r\n        localStorage.setItem('id_token', authResult.idToken)\r\n\r\n        let expiresAt = JSON.stringify((authResult.expiresIn * 1000 + new Date().getTime()))\r\n        localStorage.setItem('expiresAt', expiresAt)\r\n\r\n        this.getProfile();\r\n        setTimeout(() => { history.replace('/authcheck') }, 600);\r\n      } else {\r\n        console.log(err)\r\n      }\r\n    })\r\n  }\r\n\r\n  getAccessToken = () => {\r\n    if(localStorage.getItem('access_token')) {\r\n      const accessToken = localStorage.getItem('access_token')\r\n      return accessToken\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n\r\n  getProfile = () => {\r\n    let accessToken = this.getAccessToken()\r\n    if(accessToken) {\r\n      this.auth0.client.userInfo(accessToken, (err, profile) => {\r\n          if(profile) {\r\n            this.userProfile = { profile }\r\n          }\r\n      } )\r\n    }\r\n  }\r\n\r\n\r\n  logout = () => {\r\n    localStorage.removeItem('access_token')\r\n    localStorage.removeItem('id_token')\r\n    localStorage.removeItem('expiresAt')\r\n    setTimeout(() => { history.replace('/authcheck') }, 200);\r\n  }\r\n\r\n  isAuthenticated = () => {\r\n    let expiresAt = JSON.parse(localStorage.getItem('expiresAt'))\r\n    return new Date().getTime() < expiresAt\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
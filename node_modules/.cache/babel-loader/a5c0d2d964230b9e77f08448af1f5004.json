{"ast":null,"code":"import _objectSpread from \"/home/unix/Downloads/react-hooks-blog-fullstack-master/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/unix/Downloads/react-hooks-blog-fullstack-master/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/unix/Downloads/react-hooks-blog-fullstack-master/Client/src/Blog/posts.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport moment from 'moment';\nimport Context from '../utils/context';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport '../App.css';\nimport '../styles/pagination.css';\n\nconst Posts = props => {\n  const context = useContext(Context);\n\n  const _useState = useState({\n    posts: [],\n    fetched: false,\n    first_page_load: false,\n    pages_slice: [1, 2, 3, 4, 5],\n    max_page: null,\n    items_per_page: 3,\n    currentPage: 1,\n    num_posts: null,\n    posts_slice: null,\n    posts_search: [],\n    posts_per_page: 3\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        stateLocal = _useState2[0],\n        setState = _useState2[1];\n\n  useEffect(() => {\n    if (!context.postsState) {\n      axios.get('/api/get/allposts').then(res => context.handleAddPosts(res.data)).catch(err => console.log(err));\n    }\n\n    if (context.postsState && !stateLocal.fetched) {\n      const indexOfLastPost = 1 * stateLocal.posts_per_page;\n      const indexOfFirstPost = indexOfLastPost - stateLocal.posts_per_page;\n      const last_page = Math.ceil(context.postsState.length / stateLocal.posts_per_page);\n      setState(_objectSpread({}, stateLocal, {\n        fetched: true,\n        posts: [...context.postsState],\n        num_posts: context.postsState.length,\n        max_page: last_page,\n        posts_slice: context.postsState.slice(indexOfFirstPost, indexOfLastPost)\n      }));\n    }\n  }, [context, stateLocal]);\n  useEffect(() => {\n    let page = stateLocal.currentPage;\n    let indexOfLastPost = page * 3;\n    let indexOfFirstPost = indexOfLastPost - 3;\n    setState(_objectSpread({}, stateLocal, {\n      posts_slice: stateLocal.posts.slice(indexOfFirstPost, indexOfLastPost)\n    }));\n  }, [stateLocal.currentPage]); //eslint-disable-line\n\n  const add_search_posts_to_state = posts => {\n    setState(_objectSpread({}, stateLocal, {\n      posts_search: []\n    }));\n    setState(_objectSpread({}, stateLocal, {\n      posts_search: [...posts]\n    }));\n  };\n\n  const handleSearch = event => {\n    setState(_objectSpread({}, stateLocal, {\n      posts_search: []\n    }));\n    const search_query = event.target.value;\n    axios.get('/api/get/searchpost', {\n      params: {\n        search_query: search_query\n      }\n    }).then(res => res.data.length !== 0 ? add_search_posts_to_state(res.data) : null).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const RenderPosts = post => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: '/post/' + post.post.pid,\n        state: {\n          post\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 14\n      }\n    }, post.post.title),\n    subheader: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FlexColumn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FlexRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, moment(post.post.date_created).format('MMMM Do, YYYY | h:mm a')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FlexRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, \"By:\", /*#__PURE__*/React.createElement(Link, {\n      style: {\n        paddingLeft: '5px',\n        textDecoration: 'none'\n      },\n      to: {\n        pathname: \"/user/\" + post.post.author,\n        state: {\n          post\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, post.post.author)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FlexRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, \"thumb_up\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notification-num-allposts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, \" \", post.post.likes, \" \"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      overflow: 'hidden'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \" \", post.post.body, \" \"))));\n\n  const page_change = page => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n    }); //variables for page change\n\n    let next_page = page + 1;\n    let prev_page = page - 1; //handles general page change\n    //if(state.max_page < 5 return null)\n\n    if (page > 2 && page < stateLocal.max_page - 1) {\n      setState(_objectSpread({}, stateLocal, {\n        currentPage: page,\n        pages_slice: [prev_page - 1, prev_page, page, next_page, next_page + 1]\n      }));\n    }\n\n    if (page === 2) {\n      setState(_objectSpread({}, stateLocal, {\n        currentPage: page,\n        pages_slice: [prev_page, page, next_page, next_page + 1, next_page + 2]\n      }));\n    } //handles use case for user to go back to first page from another page\n\n\n    if (page === 1) {\n      setState(_objectSpread({}, stateLocal, {\n        currentPage: page,\n        pages_slice: [page, next_page, next_page + 1, next_page + 2, next_page + 3]\n      }));\n    } //handles last page change\n\n\n    if (page === stateLocal.max_page) {\n      setState(_objectSpread({}, stateLocal, {\n        currentPage: page,\n        pages_slice: [prev_page - 3, prev_page - 2, prev_page - 1, prev_page, page]\n      }));\n    }\n\n    if (page === stateLocal.max_page - 1) {\n      setState(_objectSpread({}, stateLocal, {\n        currentPage: page,\n        pages_slice: [prev_page - 2, prev_page - 1, prev_page, page, next_page]\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      opacity: stateLocal.opacity,\n      transition: 'opacity 2s ease'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }\n  }), context.authState ? /*#__PURE__*/React.createElement(Link, {\n    to: \"/addpost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, \"Add Post\")) : /*#__PURE__*/React.createElement(Link, {\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, \"Sign Up to Add Post\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"search\",\n    label: \"Search\",\n    margin: \"normal\",\n    onChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => console.log(stateLocal),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 6\n    }\n  }, \" Button \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => console.log(context),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 6\n    }\n  }, \" Button \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 6\n    }\n  }, stateLocal.posts_search ? stateLocal.posts_search.map(post => /*#__PURE__*/React.createElement(RenderPosts, {\n    key: post.pid + 1000,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 12\n    }\n  })) : null), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 5\n    }\n  }, \"Posts\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }\n  }, stateLocal.posts_slice ? stateLocal.posts_slice.map(post => /*#__PURE__*/React.createElement(RenderPosts, {\n    key: post.pid,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  })) : null), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FlexRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => page_change(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  }, \" First \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => page_change(stateLocal.currentPage - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  }, \" Prev \"), stateLocal.pages_slice.map(page => /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => page_change(page),\n    className: stateLocal.currentPage === page ? \"pagination-active\" : \"pagination-item\",\n    key: page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 22\n    }\n  }, page)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => page_change(stateLocal.currentPage + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 16\n    }\n  }, \" Next \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => page_change(stateLocal.max_page),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 16\n    }\n  }, \" Last \"))));\n};\n\nexport default Posts;","map":{"version":3,"sources":["/home/unix/Downloads/react-hooks-blog-fullstack-master/Client/src/Blog/posts.js"],"names":["React","useContext","useEffect","useState","Link","axios","moment","Context","Button","TextField","Card","CardContent","CardHeader","Posts","props","context","posts","fetched","first_page_load","pages_slice","max_page","items_per_page","currentPage","num_posts","posts_slice","posts_search","posts_per_page","stateLocal","setState","postsState","get","then","res","handleAddPosts","data","catch","err","console","log","indexOfLastPost","indexOfFirstPost","last_page","Math","ceil","length","slice","page","add_search_posts_to_state","handleSearch","event","search_query","target","value","params","error","RenderPosts","post","pathname","pid","state","title","date_created","format","paddingLeft","textDecoration","author","likes","overflow","body","page_change","window","scrollTo","top","left","behavior","next_page","prev_page","opacity","transition","authState","map"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport axios from 'axios';\nimport moment from 'moment';\nimport Context from '../utils/context';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\n\nimport '../App.css';\nimport '../styles/pagination.css';\n\n\n\n\nconst Posts = (props) => {\nconst context = useContext(Context)\n\n\nconst [stateLocal, setState] = useState({ posts: [],\n                                          fetched: false,\n                                          first_page_load: false,\n                                          pages_slice: [1, 2, 3, 4, 5],\n                                          max_page: null,\n                                          items_per_page: 3,\n\n                                          currentPage: 1,\n                                          num_posts: null,\n                                          posts_slice: null,\n                                          posts_search: [],\n                                          posts_per_page: 3\n                                      })\n\n\n  useEffect(() => {\n   if(!context.postsState) {\n      axios.get('/api/get/allposts')\n        .then(res => context.handleAddPosts(res.data) )\n        .catch((err) => console.log(err))\n      }\n    if (context.postsState && !stateLocal.fetched) {\n      const indexOfLastPost = 1 * stateLocal.posts_per_page\n      const indexOfFirstPost = indexOfLastPost - stateLocal.posts_per_page\n      const last_page = Math.ceil(context.postsState.length/stateLocal.posts_per_page)\n\n      setState({...stateLocal,\n                fetched: true,\n                posts: [...context.postsState],\n                num_posts: context.postsState.length,\n                max_page: last_page,\n                posts_slice: context.postsState.slice(indexOfFirstPost,\n                                                      indexOfLastPost)\n                })\n      }\n    }, [context, stateLocal])\n\n\n  useEffect(() => {\n    let page = stateLocal.currentPage\n    let indexOfLastPost = page * 3;\n    let indexOfFirstPost = indexOfLastPost - 3;\n\n    setState({...stateLocal,\n              posts_slice: stateLocal.posts.slice(indexOfFirstPost,\n                                                  indexOfLastPost) })\n  }, [stateLocal.currentPage]) //eslint-disable-line\n\n\n\n\n const add_search_posts_to_state = (posts) => {\n    setState({...stateLocal, posts_search: []});\n    setState({...stateLocal, posts_search: [...posts]});\n }\n\n\nconst handleSearch = (event) => {\n   setState({...stateLocal, posts_search: []});\n   const search_query = event.target.value\n   axios.get('/api/get/searchpost', {params: {search_query: search_query} })\n     .then(res => res.data.length !== 0\n                    ? add_search_posts_to_state(res.data)\n                    : null )\n     .catch(function (error) {\n       console.log(error);\n       })\n   }\n\n\n\nconst RenderPosts = post => (\n  <div >\n  <Card >\n    <CardHeader\n      title={<Link to={{pathname:'/post/' + post.post.pid, state: {post}}}>\n                {post.post.title}\n              </Link> }\n      subheader={\n          <div className=\"FlexColumn\">\n            <div className=\"FlexRow\">\n            {  moment(post.post.date_created).format('MMMM Do, YYYY | h:mm a') }\n            </div>\n            <div className=\"FlexRow\">\n              By:\n              <Link style={{paddingLeft: '5px', textDecoration: 'none'}}\n                    to={{pathname:\"/user/\" + post.post.author, state:{post} }}>\n               { post.post.author }\n               </Link>\n             </div>\n             <div className=\"FlexRow\">\n              <i className=\"material-icons\">thumb_up</i>\n              <div className=\"notification-num-allposts\"> {post.post.likes} </div>\n            </div>\n          </div>\n          }\n        />\n    <br />\n    <CardContent>\n      <span style={{overflow: 'hidden' }}> {post.post.body} </span>\n    </CardContent>\n  </Card>\n  </div>\n)\n\nconst page_change = (page) => {\n  window.scrollTo({top:0, left: 0, behavior: 'smooth'})\n\n  //variables for page change\n  let next_page = page + 1\n  let prev_page = page - 1\n\n  //handles general page change\n  //if(state.max_page < 5 return null)\n  if(page > 2 && page < stateLocal.max_page - 1) {\n    setState({...stateLocal,\n              currentPage: page,\n              pages_slice: [prev_page - 1,\n                            prev_page,\n                            page,\n                            next_page,\n                            next_page + 1],\n            })\n   }\n   if(page === 2 ) {\n     setState({...stateLocal,\n              currentPage: page,\n               pages_slice: [prev_page,\n                             page,\n                             next_page,\n                             next_page + 1,\n                             next_page + 2],\n             })\n    }\n   //handles use case for user to go back to first page from another page\n   if(page === 1) {\n     setState({...stateLocal,\n              currentPage: page,\n               pages_slice: [page,\n                             next_page,\n                             next_page + 1,\n                             next_page + 2,\n                             next_page + 3],\n          })\n   }\n   //handles last page change\n   if(page === stateLocal.max_page) {\n     setState({...stateLocal,\n               currentPage: page,\n               pages_slice: [prev_page - 3,\n                             prev_page - 2,\n                             prev_page - 1,\n                             prev_page,\n                             page],\n             })\n   }\n   if(page === stateLocal.max_page - 1) {\n     setState({...stateLocal,\n               currentPage: page,\n               pages_slice: [prev_page - 2,\n                             prev_page - 1,\n                             prev_page,\n                             page,\n                             next_page],\n             })\n   }\n }\n\n\n\nreturn(\n    <div>\n    <div style={{opacity: stateLocal.opacity, transition: 'opacity 2s ease'}}>\n    <br />\n    { context.authState\n      ?  <Link to=\"/addpost\">\n            <Button variant=\"contained\" color=\"primary\">\n              Add Post\n            </Button>\n          </Link>\n      : <Link to=\"/signup\">\n            <Button variant=\"contained\" color=\"primary\">\n              Sign Up to Add Post\n            </Button>\n          </Link>\n        }\n    </div>\n    <br />\n    <TextField\n      id=\"search\"\n      label=\"Search\"\n      margin=\"normal\"\n      onChange={handleSearch}\n    />\n    <hr />\n     <button onClick={() => console.log(stateLocal)}> Button </button>\n     <button onClick={() => console.log(context)}> Button </button>\n     <br />\n     <div>\n       {stateLocal.posts_search\n         ? stateLocal.posts_search.map(post =>\n           <RenderPosts key={post.pid + 1000} post={post} />\n          )\n          : null\n        }\n      </div>\n\n    <h1>Posts</h1>\n      <div>\n        {stateLocal.posts_slice\n          ? stateLocal.posts_slice.map(post =>\n            <RenderPosts key={post.pid} post={post} />\n           )\n          : null\n         }\n      </div>\n      <div>\n          <div className=\"FlexRow\">\n              <button onClick={() => page_change(1) }> First </button>\n              <button onClick={() => page_change(stateLocal.currentPage - 1) }> Prev </button>\n                 {stateLocal.pages_slice.map((page) =>\n                     <div\n                       onClick={() => page_change(page)}\n                       className={stateLocal.currentPage === page\n                                     ? \"pagination-active\"\n                                     : \"pagination-item\" }\n                       key={page}>\n                         {page}\n                      </div>\n                 )}\n               <button onClick={() => page_change(stateLocal.currentPage + 1)}> Next </button>\n               <button onClick={() => page_change(stateLocal.max_page)}> Last </button>\n             </div>\n       </div>\n    </div>\n)}\n\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/home/unix/Downloads/react-hooks-blog-fullstack-master/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/unix/Downloads/react-hooks-blog-fullstack-master/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/unix/Downloads/react-hooks-blog-fullstack-master/Client/src/Blog/showpost.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport history from '../utils/history';\nimport Context from '../utils/context';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst ShowPost = props => {\n  const context = useContext(Context);\n\n  const _useState = useState({\n    comment: '',\n    fetched: false,\n    cid: 0,\n    delete_comment_id: 0,\n    edit_comment_id: 0,\n    edit_comment: '',\n    comments_arr: null,\n    cur_user_id: null,\n    like_post: true,\n    likes: 0,\n    like_user_ids: [],\n    post_title: null,\n    post_body: null,\n    post_author: null,\n    post_id: null\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        stateLocal = _useState2[0],\n        setState = _useState2[1];\n\n  useEffect(() => {\n    if (props.location.state && !stateLocal.fetched) {\n      console.log('tttt');\n      setState(_objectSpread({}, stateLocal, {\n        fetched: true,\n        likes: props.location.state.post.post.likes,\n        like_user_ids: props.location.state.post.post.like_user_id,\n        post_title: props.location.state.post.post.title,\n        post_body: props.location.state.post.post.body,\n        post_author: props.location.state.post.post.author,\n        post_id: props.location.state.post.post.pid\n      }));\n    }\n  }, [stateLocal, props.location]);\n  useEffect(() => {\n    if (!props.location.state && !stateLocal.fetched) {\n      console.log('yyyy');\n      const post_id = props.location.pathname.substring(6);\n      axios.get('/api/get/post', {\n        params: {\n          post_id: post_id\n        }\n      }).then(res => res.data.length !== 0 ? setState(_objectSpread({}, stateLocal, {\n        fetched: true,\n        likes: res.data[0].likes,\n        like_user_ids: res.data[0].like_user_id,\n        post_title: res.data[0].title,\n        post_body: res.data[0].body,\n        post_author: res.data[0].author,\n        post_id: res.data[0].pid\n      })) : null).catch(err => console.log(err));\n    }\n  }, [stateLocal, props.location]);\n  useEffect(() => {\n    if (!stateLocal.comments_arr) {\n      if (props.location.state) {\n        const post_id = props.location.pathname.substring(6);\n        axios.get('/api/get/allpostcomments', {\n          params: {\n            post_id: post_id\n          }\n        }).then(res => res.data.length !== 0 ? setState(_objectSpread({}, stateLocal, {\n          comments_arr: [...res.data]\n        })) : null).catch(err => console.log(err));\n      }\n    }\n  }, [props.location, stateLocal]);\n\n  const handleCommentSubmit = submitted_comment => {\n    if (stateLocal.comments_arr) {\n      setState(_objectSpread({}, stateLocal, {\n        comments_arr: [submitted_comment, ...stateLocal.comments_arr]\n      }));\n    } else {\n      setState(_objectSpread({}, stateLocal, {\n        comments_arr: [submitted_comment]\n      }));\n    }\n  };\n\n  const handleCommentUpdate = comment => {\n    const commentIndex = stateLocal.comments_arr.findIndex(com => com.cid === comment.cid);\n    var newArr = [...stateLocal.comments_arr];\n    newArr[commentIndex] = comment;\n    setTimeout(() => setState(_objectSpread({}, stateLocal, {\n      comments_arr: [...newArr],\n      edit_comment_id: 0\n    })), 100);\n  };\n\n  const handleCommentDelete = cid => {\n    setState(_objectSpread({}, stateLocal, {\n      delete_comment_id: cid\n    }));\n    const newArr = stateLocal.comments_arr.filter(com => com.cid !== cid);\n    setState(_objectSpread({}, stateLocal, {\n      comments_arr: newArr\n    }));\n  };\n\n  const handleEditFormClose = () => {\n    setState(_objectSpread({}, stateLocal, {\n      edit_comment_id: 0\n    }));\n  };\n\n  const RenderComments = props => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: stateLocal.delete_comment_id === props.comment.cid ? \"FadeOutComment\" : \"CommentStyles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, props.comment.comment, \" \"), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, props.comment.date_created === 'Just Now' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 16\n      }\n    }, \" \", props.comment.isEdited ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, \" Edited \") : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, \" Just Now \")) : props.comment.date_created), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, \" By: \", props.comment.author, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, props.cur_user_id === props.comment.user_id ? !props.isEditing ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => setState(_objectSpread({}, stateLocal, {\n        edit_comment_id: props.comment.cid,\n        edit_comment: props.comment.comment\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }, \"Edit\")) : /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: (event, cid) => handleUpdate(event, props.comment.cid),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      autoFocus: true,\n      name: \"edit_comment\",\n      id: \"editted_comment\",\n      label: \"Comment\",\n      value: stateLocal.edit_comment,\n      onChange: handleEditCommentChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, \"Agree\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      onClick: handleEditFormClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => handleDeleteComment(props.comment.cid),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, \"Delete\")) : null));\n  };\n\n  const handleEditCommentChange = event => setState(_objectSpread({}, stateLocal, {\n    edit_comment: event.target.value\n  }));\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setState(_objectSpread({}, stateLocal, {\n      comment: ''\n    }));\n    const comment = event.target.comment.value;\n    const user_id = context.dbProfileState[0].uid;\n    const username = context.dbProfileState[0].username;\n    const post_id = stateLocal.post_id;\n    const current_time = \"Just Now\";\n    const temp_cid = Math.floor(Math.random() * 1000);\n    const submitted_comment = {\n      cid: temp_cid,\n      comment: comment,\n      user_id: user_id,\n      author: username,\n      date_created: current_time\n    };\n    const data = {\n      comment: event.target.comment.value,\n      post_id: post_id,\n      user_id: user_id,\n      username: username\n    };\n    axios.post('/api/post/commenttodb', data).then(res => console.log(res)).catch(err => console.log(err));\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n    });\n    handleCommentSubmit(submitted_comment);\n  };\n\n  const handleUpdate = (event, cid) => {\n    event.preventDefault();\n    console.log(event);\n    console.log(cid);\n    const comment = event.target.editted_comment.value;\n    const comment_id = cid;\n    const post_id = stateLocal.post_id;\n    const user_id = context.dbProfileState[0].uid;\n    const username = context.dbProfileState[0].username;\n    const isEdited = true;\n    const current_time = \"Just Now\";\n    const edited_comment = {\n      cid: comment_id,\n      comment: comment,\n      user_id: user_id,\n      author: username,\n      date_created: current_time,\n      isEdited: isEdited\n    };\n    const data = {\n      cid: comment_id,\n      comment: comment,\n      post_id: post_id,\n      user_id: user_id,\n      username: username\n    };\n    axios.put('/api/put/commenttodb', data).then(res => console.log(res)).catch(err => console.log(err));\n    handleCommentUpdate(edited_comment);\n  };\n\n  const handleDeleteComment = cid => {\n    const comment_id = cid;\n    console.log(cid);\n    axios.delete('/api/delete/comment', {\n      data: {\n        comment_id: comment_id\n      }\n    }).then(res => console.log(res)).catch(err => console.log(err));\n    handleCommentDelete(cid);\n  };\n\n  const handleLikes = () => {\n    const user_id = context.dbProfileState[0].uid;\n    const post_id = stateLocal.post_id;\n    const data = {\n      uid: user_id,\n      post_id: post_id\n    };\n    console.log(data);\n\n    if (!stateLocal.like_user_ids.includes(user_id)) {\n      axios.put('/api/put/likes', data).then(!stateLocal.like_user_ids.includes(user_id) && stateLocal.like_post ? setState(_objectSpread({}, stateLocal, {\n        likes: stateLocal.likes + 1,\n        like_post: false\n      })) : null).catch(err => console.log(err));\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, \"Post\"), stateLocal.comments_arr || props.location.state ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 19\n    }\n  }, stateLocal.post_title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 19\n    }\n  }, stateLocal.post_body), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 19\n    }\n  }, stateLocal.post_author)) : null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: context.authState ? () => handleLikes() : () => history.replace('/signup'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 19\n    }\n  }, \"thumb_up\"), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"notification-num-showpost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 19\n    }\n  }, stateLocal.likes))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, \" Comments:\"), stateLocal.comments_arr ? stateLocal.comments_arr.map(comment => /*#__PURE__*/React.createElement(RenderComments, {\n    comment: comment,\n    cur_user_id: context.dbProfileState ? context.dbProfileState[0].uid : null,\n    key: comment.cid,\n    isEditing: comment.cid === stateLocal.edit_comment_id ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 18\n    }\n  })) : null), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"comment\",\n    label: \"Comment\",\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 15\n    }\n  }, console.log('hhhhh')), context.authState ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 19\n    }\n  }, \"Submit\") : /*#__PURE__*/React.createElement(Link, {\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 22\n    }\n  }, \"Signup to Comment\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 11\n    }\n  }));\n};\n\nexport default ShowPost;","map":{"version":3,"sources":["/home/unix/Downloads/react-hooks-blog-fullstack-master/Client/src/Blog/showpost.js"],"names":["React","useContext","useState","useEffect","Link","axios","history","Context","TextField","Button","ShowPost","props","context","comment","fetched","cid","delete_comment_id","edit_comment_id","edit_comment","comments_arr","cur_user_id","like_post","likes","like_user_ids","post_title","post_body","post_author","post_id","stateLocal","setState","location","state","console","log","post","like_user_id","title","body","author","pid","pathname","substring","get","params","then","res","data","length","catch","err","handleCommentSubmit","submitted_comment","handleCommentUpdate","commentIndex","findIndex","com","newArr","setTimeout","handleCommentDelete","filter","handleEditFormClose","RenderComments","date_created","isEdited","user_id","isEditing","event","handleUpdate","handleEditCommentChange","handleDeleteComment","target","value","handleSubmit","preventDefault","dbProfileState","uid","username","current_time","temp_cid","Math","floor","random","window","scroll","top","left","behavior","editted_comment","comment_id","edited_comment","put","delete","handleLikes","includes","cursor","authState","replace","map"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\n\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport history from '../utils/history';\r\nimport Context from '../utils/context';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\n\r\nconst ShowPost = (props) => {\r\n  const context = useContext(Context)\r\n\r\n  const [stateLocal, setState] = useState({ comment: '',\r\n                                            fetched: false,\r\n                                            cid: 0,\r\n                                            delete_comment_id: 0,\r\n                                            edit_comment_id: 0,\r\n                                            edit_comment: '',\r\n                                            comments_arr: null,\r\n                                            cur_user_id: null,\r\n                                            like_post: true,\r\n                                            likes: 0,\r\n                                            like_user_ids: [],\r\n                                            post_title: null,\r\n                                            post_body: null,\r\n                                            post_author: null,\r\n                                            post_id: null\r\n                                           })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      if(props.location.state && !stateLocal.fetched) {\r\n        console.log('tttt')\r\n        setState({...stateLocal,\r\n                  fetched: true,\r\n                  likes: props.location.state.post.post.likes,\r\n                  like_user_ids: props.location.state.post.post.like_user_id,\r\n                  post_title: props.location.state.post.post.title,\r\n                  post_body: props.location.state.post.post.body,\r\n                  post_author: props.location.state.post.post.author,\r\n                  post_id: props.location.state.post.post.pid})\r\n        }\r\n      }, [stateLocal,\r\n          props.location])\r\n\r\n  useEffect( () => {\r\n    if(!props.location.state && !stateLocal.fetched) {\r\n      console.log('yyyy')\r\n      const post_id = props.location.pathname.substring(6)\r\n\r\n      axios.get('/api/get/post',\r\n                  {params: {post_id: post_id}} )\r\n        .then(res => res.data.length !== 0\r\n                ?   setState({...stateLocal,\r\n                        fetched: true,\r\n                        likes: res.data[0].likes,\r\n                        like_user_ids: res.data[0].like_user_id,\r\n                        post_title: res.data[0].title,\r\n                        post_body: res.data[0].body,\r\n                        post_author: res.data[0].author,\r\n                        post_id: res.data[0].pid\r\n                      })\r\n                 : null\r\n              )\r\n        .catch((err) => console.log(err) )\r\n    }\r\n  }, [stateLocal,\r\n      props.location])\r\n\r\n   useEffect(() => {\r\n     if(!stateLocal.comments_arr) {\r\n       if(props.location.state) {\r\n         const post_id = props.location.pathname.substring(6)\r\n         axios.get('/api/get/allpostcomments',\r\n                     {params: {post_id: post_id}} )\r\n           .then(res => res.data.length !== 0\r\n                          ? setState({...stateLocal, comments_arr: [...res.data]})\r\n                          : null )\r\n           .catch((err) => console.log(err))\r\n       } \r\n     }\r\n   }, [props.location, stateLocal])\r\n\r\n\r\n    const handleCommentSubmit = (submitted_comment) => {\r\n        if(stateLocal.comments_arr) {\r\n            setState({...stateLocal, comments_arr: [submitted_comment,\r\n                                                  ...stateLocal.comments_arr]})\r\n         } else {\r\n           setState({...stateLocal, comments_arr: [submitted_comment]})\r\n         }\r\n     };\r\n\r\n     const handleCommentUpdate = (comment) => {\r\n       const commentIndex = stateLocal.comments_arr.findIndex(com => com.cid === comment.cid)\r\n       var newArr = [...stateLocal.comments_arr ]\r\n       newArr[commentIndex] = comment\r\n\r\n       setTimeout(() => setState({...stateLocal, comments_arr: [...newArr], edit_comment_id: 0 }), 100)\r\n     };\r\n\r\n\r\n     const handleCommentDelete = (cid) => {\r\n       setState({...stateLocal, delete_comment_id: cid})\r\n       const newArr = stateLocal.comments_arr.filter(com => com.cid !== cid)\r\n       setState({...stateLocal, comments_arr: newArr})\r\n     };\r\n\r\n     const handleEditFormClose = () => {\r\n       setState({...stateLocal, edit_comment_id: 0})\r\n     }\r\n\r\n\r\n    const RenderComments = (props) => {\r\n      return(\r\n      <div className={stateLocal.delete_comment_id === props.comment.cid\r\n                        ? \"FadeOutComment\"\r\n                        : \"CommentStyles\"}>\r\n        <div>\r\n        <p>{props.comment.comment} </p>\r\n        <small>\r\n          { props.comment.date_created === 'Just Now'\r\n            ?  <div> {props.comment.isEdited\r\n                  ? <span> Edited </span>\r\n                  : <span> Just Now </span> }</div>\r\n            :  props.comment.date_created\r\n          }\r\n        </small>\r\n        <p> By: { props.comment.author} </p>\r\n        </div>\r\n        <div>\r\n        {props.cur_user_id === props.comment.user_id\r\n          ? !props.isEditing\r\n            ?  <div>\r\n                  <Button onClick={() => setState({...stateLocal,\r\n                                                  edit_comment_id: props.comment.cid,\r\n                                                  edit_comment: props.comment.comment\r\n                                                  })\r\n                                     }>\r\n                     Edit\r\n                   </Button>\r\n                </div>\r\n            :   <form onSubmit={(event, cid) => handleUpdate(event, props.comment.cid) }>\r\n                  <input\r\n                    autoFocus={true}\r\n                    name=\"edit_comment\"\r\n                    id=\"editted_comment\"\r\n                    label=\"Comment\"\r\n                    value={stateLocal.edit_comment}\r\n                    onChange={handleEditCommentChange}\r\n                  />\r\n                    <br />\r\n                    <Button type='submit'>\r\n                       Agree\r\n                    </Button>\r\n                    <Button type=\"button\" onClick={handleEditFormClose}>\r\n                     Cancel\r\n                    </Button>\r\n                    <button onClick={() => handleDeleteComment(props.comment.cid)}>\r\n                      Delete\r\n                    </button>\r\n                  </form>\r\n            : null }\r\n          </div>\r\n      </div>\r\n    );\r\n   }\r\n\r\n\r\n\r\n    const handleEditCommentChange = (event) => (\r\n      setState({...stateLocal,\r\n                edit_comment: event.target.value})\r\n    );\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault()\r\n      setState({...stateLocal, comment: ''})\r\n\r\n      const comment = event.target.comment.value\r\n      const user_id = context.dbProfileState[0].uid\r\n      const username = context.dbProfileState[0].username\r\n      const post_id = stateLocal.post_id\r\n      const current_time = \"Just Now\"\r\n      const temp_cid = Math.floor(Math.random() * 1000);\r\n\r\n      const submitted_comment = {cid: temp_cid,\r\n                                 comment: comment,\r\n                                 user_id: user_id,\r\n                                 author: username,\r\n                                 date_created: current_time }\r\n\r\n      const data = {comment: event.target.comment.value,\r\n                    post_id: post_id,\r\n                    user_id: user_id,\r\n                    username: username}\r\n\r\n      axios.post('/api/post/commenttodb', data)\r\n        .then(res => console.log(res))\r\n        .catch((err) => console.log(err))\r\n      window.scroll({top: 0, left: 0, behavior: 'smooth'})\r\n      handleCommentSubmit(submitted_comment)\r\n    }\r\n\r\n    const handleUpdate = (event, cid) => {\r\n      event.preventDefault()\r\n      console.log(event)\r\n      console.log(cid)\r\n      const comment = event.target.editted_comment.value\r\n      const comment_id = cid\r\n      const post_id = stateLocal.post_id\r\n      const user_id = context.dbProfileState[0].uid\r\n      const username = context.dbProfileState[0].username\r\n      const isEdited = true\r\n      const current_time = \"Just Now\"\r\n\r\n      const edited_comment = {cid: comment_id,\r\n                              comment: comment,\r\n                              user_id: user_id,\r\n                              author: username,\r\n                              date_created: current_time,\r\n                              isEdited: isEdited }\r\n\r\n      const data = {cid: comment_id,\r\n                    comment: comment,\r\n                    post_id: post_id,\r\n                    user_id: user_id,\r\n                    username: username}\r\n\r\n      axios.put('/api/put/commenttodb', data)\r\n        .then(res => console.log(res))\r\n        .catch((err) => console.log(err))\r\n      handleCommentUpdate(edited_comment);\r\n    }\r\n\r\n    const handleDeleteComment = (cid) => {\r\n      const comment_id = cid\r\n      console.log(cid)\r\n      axios.delete('/api/delete/comment', {data: {comment_id: comment_id}} )\r\n        .then(res => console.log(res))\r\n        .catch((err) => console.log(err))\r\n      handleCommentDelete(cid)\r\n    }\r\n\r\n    const handleLikes = () => {\r\n        const user_id = context.dbProfileState[0].uid\r\n        const post_id = stateLocal.post_id\r\n\r\n        const data = { uid: user_id, post_id: post_id }\r\n        console.log(data)\r\n        if(!stateLocal.like_user_ids.includes(user_id)) {\r\n        \taxios.put('/api/put/likes', data)\r\n          \t\t.then( !stateLocal.like_user_ids.includes(user_id)\r\n          \t\t\t\t\t&& stateLocal.like_post\r\n                    ? setState({...stateLocal,\r\n                                likes: stateLocal.likes + 1,\r\n                                like_post: false})\r\n                    : null )\r\n          \t\t.catch(err => console.log(err))\r\n      };\r\n     }\r\n\r\n\r\n    return(\r\n        <div>\r\n          <div>\r\n            <h2>Post</h2>\r\n            {stateLocal.comments_arr || props.location.state\r\n              ? <div>\r\n                  <p>{stateLocal.post_title}</p>\r\n                  <p>{stateLocal.post_body}</p>\r\n                  <p>{stateLocal.post_author}</p>\r\n                </div>\r\n            : null\r\n           }\r\n\r\n              <div style={{cursor: 'pointer'}} onClick={context.authState\r\n                                                        ? () => handleLikes()\r\n                                                        : () => history.replace('/signup')}>\r\n                  <i className=\"material-icons\">thumb_up</i>\r\n                  <small className=\"notification-num-showpost\">\r\n                    {stateLocal.likes}\r\n                  </small>\r\n                </div>\r\n          </div>\r\n          <div>\r\n\r\n            <h2> Comments:</h2>\r\n            {stateLocal.comments_arr\r\n              ? stateLocal.comments_arr.map((comment) =>\r\n                 <RenderComments comment={comment}\r\n                                 cur_user_id={context.dbProfileState\r\n                                                ? context.dbProfileState[0].uid\r\n                                                : null  }\r\n                                 key={comment.cid}\r\n                                 isEditing={comment.cid === stateLocal.edit_comment_id\r\n                                              ? true\r\n                                              : false }\r\n                       />)\r\n              : null\r\n            }\r\n          </div>\r\n          <div>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                id=\"comment\"\r\n                label=\"Comment\"\r\n                margin=\"normal\"\r\n              />\r\n              <br />\r\n              <div>\r\n                {console.log('hhhhh')}\r\n              </div>\r\n              {context.authState\r\n                ? <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    Submit\r\n                  </Button>\r\n                : <Link to=\"/signup\">\r\n                     <Button  variant=\"contained\" color=\"primary\">\r\n                         Signup to Comment\r\n                      </Button>\r\n                   </Link>\r\n               }\r\n            </form>\r\n          </div>\r\n          <div>\r\n          </div>\r\n        </div>\r\n    )}\r\n\r\n\r\n\r\n\r\nexport default ShowPost;\r\n\r\n"]},"metadata":{},"sourceType":"module"}